#!/data/data/com.termux/files/usr/bin/bash
# üì¶ Backup projects folder ‚Üí ~/BackupPJ (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° node_modules ‡πÅ‡∏•‡∏∞ .git)
# ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö 5 ‡πÑ‡∏ü‡∏•‡πå zip ‡∏à‡∏∞ push ‡πÑ‡∏õ GitHub repo termux-ultimate-setup ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πà‡∏≤

set -e

PROJECTS_DIR=~/projects
BACKUP_DIR=~/BackupPJ
REPO_DIR=~/termux-ultimate-setup
TIMESTAMP=$(date +%F-%H%M%S)
ZIP_FILE="$BACKUP_DIR/projects-$TIMESTAMP.zip"

# -------------------------------
# 1Ô∏è‚É£ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå BackupPJ ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
# -------------------------------
mkdir -p "$BACKUP_DIR"

# -------------------------------
# 2Ô∏è‚É£ ‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå projects (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° node_modules ‡πÅ‡∏•‡∏∞ .git)
# -------------------------------
echo "üì¶ Creating backup: $ZIP_FILE"
cd "$PROJECTS_DIR"
zip -r "$ZIP_FILE" . -x "node_modules/*" -x ".git/*" >/dev/null

# -------------------------------
# 3Ô∏è‚É£ ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô BackupPJ
# -------------------------------
COUNT=$(ls -1 "$BACKUP_DIR"/*.zip 2>/dev/null | wc -l)
echo "üìä Current backups in $BACKUP_DIR: $COUNT file(s)"

# -------------------------------
# 4Ô∏è‚É£ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 5 ‚Üí ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ repo + commit/push + ‡∏•‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô BackupPJ
# -------------------------------
if [ "$COUNT" -ge 5 ]; then
    echo "üöÄ Backup limit reached (>=5). Pushing to GitHub repo..."

    mkdir -p "$REPO_DIR/backup"
    mv "$BACKUP_DIR"/*.zip "$REPO_DIR/backup/"

    cd "$REPO_DIR"
    git add backup/
    git commit -m "üì¶ Auto backup projects at $TIMESTAMP"
    git push origin main

    echo "‚úÖ Backups pushed to GitHub!"

    echo "üßπ Cleaning $BACKUP_DIR..."
    rm -f "$BACKUP_DIR"/*.zip
    echo "‚úÖ Backup folder cleaned!"
else
    echo "‚ÑπÔ∏è Less than 5 backups. Skipping push."
fi